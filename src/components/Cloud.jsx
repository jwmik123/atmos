/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 public/models/cloud/cloud.glb
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export function Cloud({ opacity, ...props }) {
  const { nodes, materials } = useGLTF("./models/cloud/cloud.glb");
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Node.geometry}>
        <meshStandardMaterial
          onBeforeCompile={(shader) => {
            shader.fragmentShader = shader.fragmentShader.replace(
              `vec4 diffuseColor = vec4( diffuse, opacity );`,
              `
              float fadeDist = 200.0;
              float dist = length(vViewPosition);

              float fadeOpacity = smoothstep(fadeDist, 0.0, dist);
              vec4 diffuseColor = vec4(diffuse, fadeOpacity * opacity);
              `
            );
            console.log(shader.fragmentShader);
          }}
          envMapIntensity={2}
          transparent
          opacity={opacity}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("./models/cloud/cloud.glb");
